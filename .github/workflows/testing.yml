# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Testing
on:
  push:
    branches:
      - main,
      - feature/**
      - fix/**
  pull_request:
    branches:
      - main,
      - feature/**
      - fix/**

jobs:
  build:
    strategy:
      matrix:
        java: [ 8 ]
        os: [ 'ubuntu-latest' ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout codes
        uses: actions/checkout@v3
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
      - name: Cache local Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Test with Maven
        run: |
          cd source/java
          bash build.sh
      - name: Set up python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Test with python
        run: |
          pip install grpcio-tools
          python source/python/build.py
      - name: Install Protoc for Rust
        uses: arduino/setup-protoc@v2
        with:
          version: "23.x"
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Checkout code for Rust
        uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt, clippy
      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
