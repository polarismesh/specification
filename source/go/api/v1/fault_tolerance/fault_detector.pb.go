// Code generated by protoc-gen-go. DO NOT EDIT.
// source: fault_detector.proto

package fault_tolerance // import "github.com/polarismesh/specification/source/go/api/v1/fault_tolerance"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import model "github.com/polarismesh/specification/source/go/api/v1/model"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// detect protocol
type FaultDetectRule_Protocol int32

const (
	FaultDetectRule_UNKNOWN FaultDetectRule_Protocol = 0
	FaultDetectRule_HTTP    FaultDetectRule_Protocol = 1
	FaultDetectRule_TCP     FaultDetectRule_Protocol = 2
	FaultDetectRule_UDP     FaultDetectRule_Protocol = 3
)

var FaultDetectRule_Protocol_name = map[int32]string{
	0: "UNKNOWN",
	1: "HTTP",
	2: "TCP",
	3: "UDP",
}
var FaultDetectRule_Protocol_value = map[string]int32{
	"UNKNOWN": 0,
	"HTTP":    1,
	"TCP":     2,
	"UDP":     3,
}

func (x FaultDetectRule_Protocol) String() string {
	return proto.EnumName(FaultDetectRule_Protocol_name, int32(x))
}
func (FaultDetectRule_Protocol) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_fault_detector_ad2fe84489650491, []int{1, 0}
}

type FaultDetector struct {
	// fault detect rules for current service
	Rules []*FaultDetectRule `protobuf:"bytes,1,rep,name=rules,proto3" json:"rules,omitempty"`
	// total revision for the fault detect rules
	Revision             string   `protobuf:"bytes,2,opt,name=revision,proto3" json:"revision,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FaultDetector) Reset()         { *m = FaultDetector{} }
func (m *FaultDetector) String() string { return proto.CompactTextString(m) }
func (*FaultDetector) ProtoMessage()    {}
func (*FaultDetector) Descriptor() ([]byte, []int) {
	return fileDescriptor_fault_detector_ad2fe84489650491, []int{0}
}
func (m *FaultDetector) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FaultDetector.Unmarshal(m, b)
}
func (m *FaultDetector) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FaultDetector.Marshal(b, m, deterministic)
}
func (dst *FaultDetector) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FaultDetector.Merge(dst, src)
}
func (m *FaultDetector) XXX_Size() int {
	return xxx_messageInfo_FaultDetector.Size(m)
}
func (m *FaultDetector) XXX_DiscardUnknown() {
	xxx_messageInfo_FaultDetector.DiscardUnknown(m)
}

var xxx_messageInfo_FaultDetector proto.InternalMessageInfo

func (m *FaultDetector) GetRules() []*FaultDetectRule {
	if m != nil {
		return m.Rules
	}
	return nil
}

func (m *FaultDetector) GetRevision() string {
	if m != nil {
		return m.Revision
	}
	return ""
}

type FaultDetectRule struct {
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// rule name
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// namespace of rule
	Namespace string `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// revision routing version
	Revision string `protobuf:"bytes,4,opt,name=revision,proto3" json:"revision,omitempty"`
	// ctime create time of the rules
	Ctime string `protobuf:"bytes,5,opt,name=ctime,proto3" json:"ctime,omitempty"`
	// mtime modify time of the rules
	Mtime string `protobuf:"bytes,6,opt,name=mtime,proto3" json:"mtime,omitempty"`
	// description simple description rules
	Description string `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	// detect target
	TargetService *FaultDetectRule_DestinationService `protobuf:"bytes,21,opt,name=target_service,json=targetService,proto3" json:"target_service,omitempty"`
	// detect interval
	Interval uint32 `protobuf:"varint,22,opt,name=interval,proto3" json:"interval,omitempty"`
	// detect timeout
	Timeout uint32 `protobuf:"varint,23,opt,name=timeout,proto3" json:"timeout,omitempty"`
	// detect port
	Port     uint32                   `protobuf:"varint,24,opt,name=port,proto3" json:"port,omitempty"`
	Protocol FaultDetectRule_Protocol `protobuf:"varint,25,opt,name=protocol,proto3,enum=v1.FaultDetectRule_Protocol" json:"protocol,omitempty"`
	// http detect config
	HttpConfig *HttpProtocolConfig `protobuf:"bytes,26,opt,name=http_config,json=httpConfig,proto3" json:"http_config,omitempty"`
	// tcp detect config
	TcpConfig *TcpProtocolConfig `protobuf:"bytes,27,opt,name=tcp_config,json=tcpConfig,proto3" json:"tcp_config,omitempty"`
	// udp detect config
	UdpConfig *UdpProtocolConfig `protobuf:"bytes,28,opt,name=udp_config,json=udpConfig,proto3" json:"udp_config,omitempty"`
	// priority rules priority
	Priority             uint32   `protobuf:"varint,29,opt,name=priority,proto3" json:"priority,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FaultDetectRule) Reset()         { *m = FaultDetectRule{} }
func (m *FaultDetectRule) String() string { return proto.CompactTextString(m) }
func (*FaultDetectRule) ProtoMessage()    {}
func (*FaultDetectRule) Descriptor() ([]byte, []int) {
	return fileDescriptor_fault_detector_ad2fe84489650491, []int{1}
}
func (m *FaultDetectRule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FaultDetectRule.Unmarshal(m, b)
}
func (m *FaultDetectRule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FaultDetectRule.Marshal(b, m, deterministic)
}
func (dst *FaultDetectRule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FaultDetectRule.Merge(dst, src)
}
func (m *FaultDetectRule) XXX_Size() int {
	return xxx_messageInfo_FaultDetectRule.Size(m)
}
func (m *FaultDetectRule) XXX_DiscardUnknown() {
	xxx_messageInfo_FaultDetectRule.DiscardUnknown(m)
}

var xxx_messageInfo_FaultDetectRule proto.InternalMessageInfo

func (m *FaultDetectRule) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *FaultDetectRule) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FaultDetectRule) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *FaultDetectRule) GetRevision() string {
	if m != nil {
		return m.Revision
	}
	return ""
}

func (m *FaultDetectRule) GetCtime() string {
	if m != nil {
		return m.Ctime
	}
	return ""
}

func (m *FaultDetectRule) GetMtime() string {
	if m != nil {
		return m.Mtime
	}
	return ""
}

func (m *FaultDetectRule) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *FaultDetectRule) GetTargetService() *FaultDetectRule_DestinationService {
	if m != nil {
		return m.TargetService
	}
	return nil
}

func (m *FaultDetectRule) GetInterval() uint32 {
	if m != nil {
		return m.Interval
	}
	return 0
}

func (m *FaultDetectRule) GetTimeout() uint32 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

func (m *FaultDetectRule) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *FaultDetectRule) GetProtocol() FaultDetectRule_Protocol {
	if m != nil {
		return m.Protocol
	}
	return FaultDetectRule_UNKNOWN
}

func (m *FaultDetectRule) GetHttpConfig() *HttpProtocolConfig {
	if m != nil {
		return m.HttpConfig
	}
	return nil
}

func (m *FaultDetectRule) GetTcpConfig() *TcpProtocolConfig {
	if m != nil {
		return m.TcpConfig
	}
	return nil
}

func (m *FaultDetectRule) GetUdpConfig() *UdpProtocolConfig {
	if m != nil {
		return m.UdpConfig
	}
	return nil
}

func (m *FaultDetectRule) GetPriority() uint32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

type FaultDetectRule_DestinationService struct {
	Service   string `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// deprecated_filed  use api.path instead
	Method               *model.MatchString `protobuf:"bytes,3,opt,name=method,proto3" json:"method,omitempty"` // Deprecated: Do not use.
	Api                  *model.API         `protobuf:"bytes,4,opt,name=api,proto3" json:"api,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *FaultDetectRule_DestinationService) Reset()         { *m = FaultDetectRule_DestinationService{} }
func (m *FaultDetectRule_DestinationService) String() string { return proto.CompactTextString(m) }
func (*FaultDetectRule_DestinationService) ProtoMessage()    {}
func (*FaultDetectRule_DestinationService) Descriptor() ([]byte, []int) {
	return fileDescriptor_fault_detector_ad2fe84489650491, []int{1, 0}
}
func (m *FaultDetectRule_DestinationService) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FaultDetectRule_DestinationService.Unmarshal(m, b)
}
func (m *FaultDetectRule_DestinationService) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FaultDetectRule_DestinationService.Marshal(b, m, deterministic)
}
func (dst *FaultDetectRule_DestinationService) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FaultDetectRule_DestinationService.Merge(dst, src)
}
func (m *FaultDetectRule_DestinationService) XXX_Size() int {
	return xxx_messageInfo_FaultDetectRule_DestinationService.Size(m)
}
func (m *FaultDetectRule_DestinationService) XXX_DiscardUnknown() {
	xxx_messageInfo_FaultDetectRule_DestinationService.DiscardUnknown(m)
}

var xxx_messageInfo_FaultDetectRule_DestinationService proto.InternalMessageInfo

func (m *FaultDetectRule_DestinationService) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *FaultDetectRule_DestinationService) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

// Deprecated: Do not use.
func (m *FaultDetectRule_DestinationService) GetMethod() *model.MatchString {
	if m != nil {
		return m.Method
	}
	return nil
}

func (m *FaultDetectRule_DestinationService) GetApi() *model.API {
	if m != nil {
		return m.Api
	}
	return nil
}

type HttpProtocolConfig struct {
	Method               string                              `protobuf:"bytes,1,opt,name=method,proto3" json:"method,omitempty"`
	Url                  string                              `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Headers              []*HttpProtocolConfig_MessageHeader `protobuf:"bytes,3,rep,name=headers,proto3" json:"headers,omitempty"`
	Body                 string                              `protobuf:"bytes,4,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *HttpProtocolConfig) Reset()         { *m = HttpProtocolConfig{} }
func (m *HttpProtocolConfig) String() string { return proto.CompactTextString(m) }
func (*HttpProtocolConfig) ProtoMessage()    {}
func (*HttpProtocolConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_fault_detector_ad2fe84489650491, []int{2}
}
func (m *HttpProtocolConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HttpProtocolConfig.Unmarshal(m, b)
}
func (m *HttpProtocolConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HttpProtocolConfig.Marshal(b, m, deterministic)
}
func (dst *HttpProtocolConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HttpProtocolConfig.Merge(dst, src)
}
func (m *HttpProtocolConfig) XXX_Size() int {
	return xxx_messageInfo_HttpProtocolConfig.Size(m)
}
func (m *HttpProtocolConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_HttpProtocolConfig.DiscardUnknown(m)
}

var xxx_messageInfo_HttpProtocolConfig proto.InternalMessageInfo

func (m *HttpProtocolConfig) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *HttpProtocolConfig) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *HttpProtocolConfig) GetHeaders() []*HttpProtocolConfig_MessageHeader {
	if m != nil {
		return m.Headers
	}
	return nil
}

func (m *HttpProtocolConfig) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

type HttpProtocolConfig_MessageHeader struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HttpProtocolConfig_MessageHeader) Reset()         { *m = HttpProtocolConfig_MessageHeader{} }
func (m *HttpProtocolConfig_MessageHeader) String() string { return proto.CompactTextString(m) }
func (*HttpProtocolConfig_MessageHeader) ProtoMessage()    {}
func (*HttpProtocolConfig_MessageHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_fault_detector_ad2fe84489650491, []int{2, 0}
}
func (m *HttpProtocolConfig_MessageHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HttpProtocolConfig_MessageHeader.Unmarshal(m, b)
}
func (m *HttpProtocolConfig_MessageHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HttpProtocolConfig_MessageHeader.Marshal(b, m, deterministic)
}
func (dst *HttpProtocolConfig_MessageHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HttpProtocolConfig_MessageHeader.Merge(dst, src)
}
func (m *HttpProtocolConfig_MessageHeader) XXX_Size() int {
	return xxx_messageInfo_HttpProtocolConfig_MessageHeader.Size(m)
}
func (m *HttpProtocolConfig_MessageHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_HttpProtocolConfig_MessageHeader.DiscardUnknown(m)
}

var xxx_messageInfo_HttpProtocolConfig_MessageHeader proto.InternalMessageInfo

func (m *HttpProtocolConfig_MessageHeader) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *HttpProtocolConfig_MessageHeader) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type TcpProtocolConfig struct {
	Send                 string   `protobuf:"bytes,1,opt,name=send,proto3" json:"send,omitempty"`
	Receive              []string `protobuf:"bytes,2,rep,name=receive,proto3" json:"receive,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TcpProtocolConfig) Reset()         { *m = TcpProtocolConfig{} }
func (m *TcpProtocolConfig) String() string { return proto.CompactTextString(m) }
func (*TcpProtocolConfig) ProtoMessage()    {}
func (*TcpProtocolConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_fault_detector_ad2fe84489650491, []int{3}
}
func (m *TcpProtocolConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TcpProtocolConfig.Unmarshal(m, b)
}
func (m *TcpProtocolConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TcpProtocolConfig.Marshal(b, m, deterministic)
}
func (dst *TcpProtocolConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TcpProtocolConfig.Merge(dst, src)
}
func (m *TcpProtocolConfig) XXX_Size() int {
	return xxx_messageInfo_TcpProtocolConfig.Size(m)
}
func (m *TcpProtocolConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_TcpProtocolConfig.DiscardUnknown(m)
}

var xxx_messageInfo_TcpProtocolConfig proto.InternalMessageInfo

func (m *TcpProtocolConfig) GetSend() string {
	if m != nil {
		return m.Send
	}
	return ""
}

func (m *TcpProtocolConfig) GetReceive() []string {
	if m != nil {
		return m.Receive
	}
	return nil
}

type UdpProtocolConfig struct {
	Send                 string   `protobuf:"bytes,1,opt,name=send,proto3" json:"send,omitempty"`
	Receive              []string `protobuf:"bytes,2,rep,name=receive,proto3" json:"receive,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UdpProtocolConfig) Reset()         { *m = UdpProtocolConfig{} }
func (m *UdpProtocolConfig) String() string { return proto.CompactTextString(m) }
func (*UdpProtocolConfig) ProtoMessage()    {}
func (*UdpProtocolConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_fault_detector_ad2fe84489650491, []int{4}
}
func (m *UdpProtocolConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UdpProtocolConfig.Unmarshal(m, b)
}
func (m *UdpProtocolConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UdpProtocolConfig.Marshal(b, m, deterministic)
}
func (dst *UdpProtocolConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UdpProtocolConfig.Merge(dst, src)
}
func (m *UdpProtocolConfig) XXX_Size() int {
	return xxx_messageInfo_UdpProtocolConfig.Size(m)
}
func (m *UdpProtocolConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_UdpProtocolConfig.DiscardUnknown(m)
}

var xxx_messageInfo_UdpProtocolConfig proto.InternalMessageInfo

func (m *UdpProtocolConfig) GetSend() string {
	if m != nil {
		return m.Send
	}
	return ""
}

func (m *UdpProtocolConfig) GetReceive() []string {
	if m != nil {
		return m.Receive
	}
	return nil
}

func init() {
	proto.RegisterType((*FaultDetector)(nil), "v1.FaultDetector")
	proto.RegisterType((*FaultDetectRule)(nil), "v1.FaultDetectRule")
	proto.RegisterType((*FaultDetectRule_DestinationService)(nil), "v1.FaultDetectRule.DestinationService")
	proto.RegisterType((*HttpProtocolConfig)(nil), "v1.HttpProtocolConfig")
	proto.RegisterType((*HttpProtocolConfig_MessageHeader)(nil), "v1.HttpProtocolConfig.MessageHeader")
	proto.RegisterType((*TcpProtocolConfig)(nil), "v1.TcpProtocolConfig")
	proto.RegisterType((*UdpProtocolConfig)(nil), "v1.UdpProtocolConfig")
	proto.RegisterEnum("v1.FaultDetectRule_Protocol", FaultDetectRule_Protocol_name, FaultDetectRule_Protocol_value)
}

func init() {
	proto.RegisterFile("fault_detector.proto", fileDescriptor_fault_detector_ad2fe84489650491)
}

var fileDescriptor_fault_detector_ad2fe84489650491 = []byte{
	// 714 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0xdd, 0x6e, 0xd3, 0x30,
	0x14, 0x26, 0x4d, 0xd7, 0x76, 0x27, 0xea, 0x56, 0xcc, 0x36, 0xbc, 0x32, 0xa4, 0xaa, 0x42, 0xa8,
	0x08, 0x29, 0xd5, 0x3a, 0xa4, 0xed, 0x0a, 0x69, 0x3f, 0xa0, 0x01, 0xda, 0xa8, 0xb2, 0x0e, 0x24,
	0x6e, 0xa6, 0xcc, 0x39, 0x6b, 0x2d, 0x92, 0x38, 0x72, 0x9c, 0x48, 0x7b, 0x0f, 0x78, 0x02, 0x1e,
	0x87, 0x97, 0x42, 0x76, 0x92, 0x6e, 0x5d, 0x77, 0xc3, 0x55, 0xce, 0x77, 0xfc, 0x7d, 0xc7, 0xe7,
	0xcf, 0x81, 0x8d, 0x1b, 0x3f, 0x0b, 0xd5, 0x55, 0x80, 0x0a, 0x99, 0x12, 0xd2, 0x4d, 0xa4, 0x50,
	0x82, 0xd4, 0xf2, 0xdd, 0xae, 0x13, 0x89, 0x00, 0xc3, 0xc2, 0xd1, 0xff, 0x06, 0xed, 0x8f, 0x9a,
	0x78, 0x52, 0xf2, 0xc8, 0x1b, 0x58, 0x91, 0x59, 0x88, 0x29, 0xb5, 0x7a, 0xf6, 0xc0, 0x19, 0x3d,
	0x73, 0xf3, 0x5d, 0xf7, 0x1e, 0xc3, 0xcb, 0x42, 0xf4, 0x0a, 0x06, 0xe9, 0x42, 0x4b, 0x62, 0xce,
	0x53, 0x2e, 0x62, 0x5a, 0xeb, 0x59, 0x83, 0x55, 0x6f, 0x8e, 0xfb, 0x7f, 0x1a, 0xb0, 0xfe, 0x40,
	0x46, 0xd6, 0xa0, 0xc6, 0x03, 0x6a, 0x19, 0x66, 0x8d, 0x07, 0x84, 0x40, 0x3d, 0xf6, 0x23, 0x2c,
	0xb5, 0xc6, 0x26, 0x3b, 0xb0, 0xaa, 0xbf, 0x69, 0xe2, 0x33, 0xa4, 0xb6, 0x39, 0xb8, 0x73, 0x2c,
	0xdc, 0x58, 0x5f, 0xbc, 0x91, 0x6c, 0xc0, 0x0a, 0x53, 0x3c, 0x42, 0xba, 0x62, 0x0e, 0x0a, 0xa0,
	0xbd, 0x91, 0xf1, 0x36, 0x0a, 0xaf, 0x01, 0xa4, 0x07, 0x4e, 0x80, 0x29, 0x93, 0x3c, 0x51, 0x3a,
	0x54, 0xd3, 0x9c, 0xdd, 0x77, 0x91, 0x33, 0x58, 0x53, 0xbe, 0x9c, 0xa2, 0xba, 0x4a, 0x51, 0xe6,
	0x9c, 0x21, 0xdd, 0xec, 0x59, 0x03, 0x67, 0xf4, 0xfa, 0x91, 0x7e, 0xb8, 0x27, 0x98, 0x2a, 0x1e,
	0xfb, 0x5a, 0x78, 0x51, 0xb0, 0xbd, 0x76, 0xa1, 0x2e, 0xa1, 0x4e, 0x9c, 0xc7, 0x0a, 0x65, 0xee,
	0x87, 0x74, 0xab, 0x67, 0x0d, 0xda, 0xde, 0x1c, 0x13, 0x0a, 0x4d, 0x9d, 0x94, 0xc8, 0x14, 0x7d,
	0x6e, 0x8e, 0x2a, 0xa8, 0x1b, 0x94, 0x08, 0xa9, 0x28, 0x35, 0x6e, 0x63, 0x93, 0x03, 0x68, 0x99,
	0xc9, 0x31, 0x11, 0xd2, 0xed, 0x9e, 0x35, 0x58, 0x1b, 0xed, 0x3c, 0x96, 0xd2, 0xb8, 0xe4, 0x78,
	0x73, 0x36, 0xd9, 0x07, 0x67, 0xa6, 0x54, 0x72, 0xc5, 0x44, 0x7c, 0xc3, 0xa7, 0xb4, 0x6b, 0xea,
	0xd9, 0xd2, 0xe2, 0x53, 0xa5, 0x92, 0x4a, 0x70, 0x6c, 0x4e, 0x3d, 0xd0, 0xd4, 0xc2, 0x26, 0xef,
	0x00, 0x14, 0x9b, 0xeb, 0x5e, 0x18, 0xdd, 0xa6, 0xd6, 0x4d, 0xd8, 0x43, 0xd9, 0xaa, 0x62, 0xf7,
	0x54, 0x59, 0x30, 0x57, 0xed, 0xdc, 0xa9, 0x2e, 0x83, 0x25, 0x55, 0x16, 0x54, 0xaa, 0xae, 0x2e,
	0x8f, 0x0b, 0xc9, 0xd5, 0x2d, 0x7d, 0x59, 0x34, 0xaa, 0xc2, 0xdd, 0x5f, 0x16, 0x90, 0xe5, 0x56,
	0xeb, 0xfe, 0x55, 0x33, 0x2a, 0x76, 0xab, 0x82, 0x8b, 0xcb, 0x54, 0x7b, 0xb8, 0x4c, 0x6f, 0xa1,
	0x11, 0xa1, 0x9a, 0x89, 0xc0, 0xec, 0x99, 0x33, 0x5a, 0xd7, 0xc9, 0x9d, 0xf9, 0x8a, 0xcd, 0x2e,
	0x94, 0xe4, 0xf1, 0xf4, 0xa8, 0x46, 0x2d, 0xaf, 0xa4, 0x90, 0x6d, 0xb0, 0xfd, 0x84, 0x9b, 0xa5,
	0x73, 0x46, 0x4d, 0xcd, 0x3c, 0x1c, 0x7f, 0xf2, 0xb4, 0xaf, 0xbf, 0x07, 0xad, 0xaa, 0x1e, 0xe2,
	0x40, 0xf3, 0xf2, 0xfc, 0xcb, 0xf9, 0xd7, 0xef, 0xe7, 0x9d, 0x27, 0xa4, 0x05, 0xf5, 0xd3, 0xc9,
	0x64, 0xdc, 0xb1, 0x48, 0x13, 0xec, 0xc9, 0xf1, 0xb8, 0x53, 0xd3, 0xc6, 0xe5, 0xc9, 0xb8, 0x63,
	0x7f, 0xae, 0xb7, 0x5a, 0x9d, 0xcd, 0xfe, 0x5f, 0x0b, 0xc8, 0x72, 0xf3, 0xc9, 0xd6, 0x3c, 0xb3,
	0xa2, 0xa0, 0x2a, 0x89, 0x0e, 0xd8, 0x99, 0x0c, 0xcb, 0x4a, 0xb4, 0x49, 0xde, 0x43, 0x73, 0x86,
	0x7e, 0x80, 0x32, 0xa5, 0xb6, 0x79, 0xaf, 0xaf, 0x1e, 0x9f, 0xa7, 0x7b, 0x86, 0x69, 0xea, 0x4f,
	0xf1, 0xd4, 0x90, 0xbd, 0x4a, 0xa4, 0x37, 0xec, 0x5a, 0x04, 0xb7, 0xe5, 0x63, 0x32, 0x76, 0x77,
	0x1f, 0xda, 0x0b, 0x6c, 0x7d, 0xed, 0x4f, 0xbc, 0x2d, 0x73, 0xd1, 0xa6, 0x7e, 0x55, 0xb9, 0x1f,
	0x66, 0x55, 0x53, 0x0b, 0xd0, 0x3f, 0x84, 0xa7, 0x4b, 0x1b, 0xa1, 0x6f, 0x48, 0x31, 0xae, 0x2a,
	0x31, 0xb6, 0x9e, 0x98, 0x44, 0x86, 0x3c, 0xd7, 0x01, 0x6c, 0x3d, 0xb1, 0x12, 0xea, 0x10, 0x4b,
	0xeb, 0xf1, 0x7f, 0x21, 0x8e, 0x7e, 0x5b, 0x70, 0xc0, 0x44, 0xe4, 0x2a, 0x8c, 0x19, 0xc6, 0xca,
	0x4d, 0x44, 0xe8, 0x4b, 0x9e, 0xba, 0x69, 0x82, 0x8c, 0xdf, 0x70, 0x66, 0x76, 0xc7, 0xf5, 0x13,
	0xae, 0x3b, 0x65, 0x7e, 0x92, 0xae, 0x12, 0x21, 0x4a, 0x3f, 0x66, 0x78, 0x44, 0x16, 0x7e, 0x86,
	0x26, 0x8f, 0x1f, 0x1f, 0xa6, 0x5c, 0xcd, 0xb2, 0x6b, 0x97, 0x89, 0x68, 0x58, 0x06, 0x8b, 0x30,
	0x9d, 0x0d, 0x17, 0x02, 0x0e, 0x53, 0x91, 0x49, 0x86, 0xc3, 0xa9, 0x18, 0xfa, 0x09, 0x1f, 0xe6,
	0xbb, 0xc3, 0xe2, 0xff, 0x3b, 0x0f, 0x7d, 0xdd, 0x30, 0x0f, 0x71, 0xef, 0x5f, 0x00, 0x00, 0x00,
	0xff, 0xff, 0xfd, 0xba, 0x62, 0xb7, 0x99, 0x05, 0x00, 0x00,
}
