// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.27.3
// source: grpc_config_api.proto

package config_manage

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

var File_grpc_config_api_proto protoreflect.FileDescriptor

var file_grpc_config_api_proto_rawDesc = []byte{
	0x0a, 0x15, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x76, 0x31, 0x1a, 0x11, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x32, 0xeb, 0x04, 0x0a, 0x11, 0x50,
	0x6f, 0x6c, 0x61, 0x72, 0x69, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x52, 0x50, 0x43,
	0x12, 0x45, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c,
	0x65, 0x12, 0x18, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x18, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x0e, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x1a, 0x18, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x0e, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x1a, 0x18, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x11, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x15, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x1a, 0x18, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x53, 0x0a, 0x1a, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x41, 0x6e, 0x64, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x19, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x18, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x10, 0x57, 0x61, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x20, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x57, 0x61, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46,
	0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x1a, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46,
	0x69, 0x6c, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x47, 0x0a, 0x08, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x42, 0x97, 0x01, 0x0a, 0x36, 0x63, 0x6f, 0x6d,
	0x2e, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x6f, 0x6c, 0x61, 0x72, 0x69, 0x73,
	0x2e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x42, 0x18, 0x50, 0x6f, 0x6c, 0x61, 0x72, 0x69, 0x73, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x47, 0x52, 0x50, 0x43, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5a, 0x43, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x6f, 0x6c, 0x61, 0x72, 0x69,
	0x73, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x67, 0x6f, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var file_grpc_config_api_proto_goTypes = []interface{}{
	(*ClientConfigFileInfo)(nil),         // 0: v1.ClientConfigFileInfo
	(*ConfigFile)(nil),                   // 1: v1.ConfigFile
	(*ConfigFileRelease)(nil),            // 2: v1.ConfigFileRelease
	(*ConfigFilePublishInfo)(nil),        // 3: v1.ConfigFilePublishInfo
	(*ClientWatchConfigFileRequest)(nil), // 4: v1.ClientWatchConfigFileRequest
	(*ConfigFileGroupRequest)(nil),       // 5: v1.ConfigFileGroupRequest
	(*ConfigDiscoverRequest)(nil),        // 6: v1.ConfigDiscoverRequest
	(*ConfigClientResponse)(nil),         // 7: v1.ConfigClientResponse
	(*ConfigClientListResponse)(nil),     // 8: v1.ConfigClientListResponse
	(*ConfigDiscoverResponse)(nil),       // 9: v1.ConfigDiscoverResponse
}
var file_grpc_config_api_proto_depIdxs = []int32{
	0, // 0: v1.PolarisConfigGRPC.GetConfigFile:input_type -> v1.ClientConfigFileInfo
	1, // 1: v1.PolarisConfigGRPC.CreateConfigFile:input_type -> v1.ConfigFile
	1, // 2: v1.PolarisConfigGRPC.UpdateConfigFile:input_type -> v1.ConfigFile
	2, // 3: v1.PolarisConfigGRPC.PublishConfigFile:input_type -> v1.ConfigFileRelease
	3, // 4: v1.PolarisConfigGRPC.UpsertAndPublishConfigFile:input_type -> v1.ConfigFilePublishInfo
	4, // 5: v1.PolarisConfigGRPC.WatchConfigFiles:input_type -> v1.ClientWatchConfigFileRequest
	5, // 6: v1.PolarisConfigGRPC.GetConfigFileMetadataList:input_type -> v1.ConfigFileGroupRequest
	6, // 7: v1.PolarisConfigGRPC.Discover:input_type -> v1.ConfigDiscoverRequest
	7, // 8: v1.PolarisConfigGRPC.GetConfigFile:output_type -> v1.ConfigClientResponse
	7, // 9: v1.PolarisConfigGRPC.CreateConfigFile:output_type -> v1.ConfigClientResponse
	7, // 10: v1.PolarisConfigGRPC.UpdateConfigFile:output_type -> v1.ConfigClientResponse
	7, // 11: v1.PolarisConfigGRPC.PublishConfigFile:output_type -> v1.ConfigClientResponse
	7, // 12: v1.PolarisConfigGRPC.UpsertAndPublishConfigFile:output_type -> v1.ConfigClientResponse
	7, // 13: v1.PolarisConfigGRPC.WatchConfigFiles:output_type -> v1.ConfigClientResponse
	8, // 14: v1.PolarisConfigGRPC.GetConfigFileMetadataList:output_type -> v1.ConfigClientListResponse
	9, // 15: v1.PolarisConfigGRPC.Discover:output_type -> v1.ConfigDiscoverResponse
	8, // [8:16] is the sub-list for method output_type
	0, // [0:8] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_grpc_config_api_proto_init() }
func file_grpc_config_api_proto_init() {
	if File_grpc_config_api_proto != nil {
		return
	}
	file_config_file_proto_init()
	file_config_file_response_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_grpc_config_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_grpc_config_api_proto_goTypes,
		DependencyIndexes: file_grpc_config_api_proto_depIdxs,
	}.Build()
	File_grpc_config_api_proto = out.File
	file_grpc_config_api_proto_rawDesc = nil
	file_grpc_config_api_proto_goTypes = nil
	file_grpc_config_api_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PolarisConfigGRPCClient is the client API for PolarisConfigGRPC service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PolarisConfigGRPCClient interface {
	// 拉取配置
	GetConfigFile(ctx context.Context, in *ClientConfigFileInfo, opts ...grpc.CallOption) (*ConfigClientResponse, error)
	// 创建配置
	CreateConfigFile(ctx context.Context, in *ConfigFile, opts ...grpc.CallOption) (*ConfigClientResponse, error)
	// 更新配置
	UpdateConfigFile(ctx context.Context, in *ConfigFile, opts ...grpc.CallOption) (*ConfigClientResponse, error)
	// 发布配置
	PublishConfigFile(ctx context.Context, in *ConfigFileRelease, opts ...grpc.CallOption) (*ConfigClientResponse, error)
	// 发布配置
	UpsertAndPublishConfigFile(ctx context.Context, in *ConfigFilePublishInfo, opts ...grpc.CallOption) (*ConfigClientResponse, error)
	// 订阅配置变更
	WatchConfigFiles(ctx context.Context, in *ClientWatchConfigFileRequest, opts ...grpc.CallOption) (*ConfigClientResponse, error)
	// 拉取指定配置分组下的配置文件列表
	GetConfigFileMetadataList(ctx context.Context, in *ConfigFileGroupRequest, opts ...grpc.CallOption) (*ConfigClientListResponse, error)
	// 统一发现接口
	Discover(ctx context.Context, opts ...grpc.CallOption) (PolarisConfigGRPC_DiscoverClient, error)
}

type polarisConfigGRPCClient struct {
	cc grpc.ClientConnInterface
}

func NewPolarisConfigGRPCClient(cc grpc.ClientConnInterface) PolarisConfigGRPCClient {
	return &polarisConfigGRPCClient{cc}
}

func (c *polarisConfigGRPCClient) GetConfigFile(ctx context.Context, in *ClientConfigFileInfo, opts ...grpc.CallOption) (*ConfigClientResponse, error) {
	out := new(ConfigClientResponse)
	err := c.cc.Invoke(ctx, "/v1.PolarisConfigGRPC/GetConfigFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *polarisConfigGRPCClient) CreateConfigFile(ctx context.Context, in *ConfigFile, opts ...grpc.CallOption) (*ConfigClientResponse, error) {
	out := new(ConfigClientResponse)
	err := c.cc.Invoke(ctx, "/v1.PolarisConfigGRPC/CreateConfigFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *polarisConfigGRPCClient) UpdateConfigFile(ctx context.Context, in *ConfigFile, opts ...grpc.CallOption) (*ConfigClientResponse, error) {
	out := new(ConfigClientResponse)
	err := c.cc.Invoke(ctx, "/v1.PolarisConfigGRPC/UpdateConfigFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *polarisConfigGRPCClient) PublishConfigFile(ctx context.Context, in *ConfigFileRelease, opts ...grpc.CallOption) (*ConfigClientResponse, error) {
	out := new(ConfigClientResponse)
	err := c.cc.Invoke(ctx, "/v1.PolarisConfigGRPC/PublishConfigFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *polarisConfigGRPCClient) UpsertAndPublishConfigFile(ctx context.Context, in *ConfigFilePublishInfo, opts ...grpc.CallOption) (*ConfigClientResponse, error) {
	out := new(ConfigClientResponse)
	err := c.cc.Invoke(ctx, "/v1.PolarisConfigGRPC/UpsertAndPublishConfigFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *polarisConfigGRPCClient) WatchConfigFiles(ctx context.Context, in *ClientWatchConfigFileRequest, opts ...grpc.CallOption) (*ConfigClientResponse, error) {
	out := new(ConfigClientResponse)
	err := c.cc.Invoke(ctx, "/v1.PolarisConfigGRPC/WatchConfigFiles", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *polarisConfigGRPCClient) GetConfigFileMetadataList(ctx context.Context, in *ConfigFileGroupRequest, opts ...grpc.CallOption) (*ConfigClientListResponse, error) {
	out := new(ConfigClientListResponse)
	err := c.cc.Invoke(ctx, "/v1.PolarisConfigGRPC/GetConfigFileMetadataList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *polarisConfigGRPCClient) Discover(ctx context.Context, opts ...grpc.CallOption) (PolarisConfigGRPC_DiscoverClient, error) {
	stream, err := c.cc.NewStream(ctx, &_PolarisConfigGRPC_serviceDesc.Streams[0], "/v1.PolarisConfigGRPC/Discover", opts...)
	if err != nil {
		return nil, err
	}
	x := &polarisConfigGRPCDiscoverClient{stream}
	return x, nil
}

type PolarisConfigGRPC_DiscoverClient interface {
	Send(*ConfigDiscoverRequest) error
	Recv() (*ConfigDiscoverResponse, error)
	grpc.ClientStream
}

type polarisConfigGRPCDiscoverClient struct {
	grpc.ClientStream
}

func (x *polarisConfigGRPCDiscoverClient) Send(m *ConfigDiscoverRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *polarisConfigGRPCDiscoverClient) Recv() (*ConfigDiscoverResponse, error) {
	m := new(ConfigDiscoverResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// PolarisConfigGRPCServer is the server API for PolarisConfigGRPC service.
type PolarisConfigGRPCServer interface {
	// 拉取配置
	GetConfigFile(context.Context, *ClientConfigFileInfo) (*ConfigClientResponse, error)
	// 创建配置
	CreateConfigFile(context.Context, *ConfigFile) (*ConfigClientResponse, error)
	// 更新配置
	UpdateConfigFile(context.Context, *ConfigFile) (*ConfigClientResponse, error)
	// 发布配置
	PublishConfigFile(context.Context, *ConfigFileRelease) (*ConfigClientResponse, error)
	// 发布配置
	UpsertAndPublishConfigFile(context.Context, *ConfigFilePublishInfo) (*ConfigClientResponse, error)
	// 订阅配置变更
	WatchConfigFiles(context.Context, *ClientWatchConfigFileRequest) (*ConfigClientResponse, error)
	// 拉取指定配置分组下的配置文件列表
	GetConfigFileMetadataList(context.Context, *ConfigFileGroupRequest) (*ConfigClientListResponse, error)
	// 统一发现接口
	Discover(PolarisConfigGRPC_DiscoverServer) error
}

// UnimplementedPolarisConfigGRPCServer can be embedded to have forward compatible implementations.
type UnimplementedPolarisConfigGRPCServer struct {
}

func (*UnimplementedPolarisConfigGRPCServer) GetConfigFile(context.Context, *ClientConfigFileInfo) (*ConfigClientResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetConfigFile not implemented")
}
func (*UnimplementedPolarisConfigGRPCServer) CreateConfigFile(context.Context, *ConfigFile) (*ConfigClientResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateConfigFile not implemented")
}
func (*UnimplementedPolarisConfigGRPCServer) UpdateConfigFile(context.Context, *ConfigFile) (*ConfigClientResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateConfigFile not implemented")
}
func (*UnimplementedPolarisConfigGRPCServer) PublishConfigFile(context.Context, *ConfigFileRelease) (*ConfigClientResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PublishConfigFile not implemented")
}
func (*UnimplementedPolarisConfigGRPCServer) UpsertAndPublishConfigFile(context.Context, *ConfigFilePublishInfo) (*ConfigClientResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpsertAndPublishConfigFile not implemented")
}
func (*UnimplementedPolarisConfigGRPCServer) WatchConfigFiles(context.Context, *ClientWatchConfigFileRequest) (*ConfigClientResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WatchConfigFiles not implemented")
}
func (*UnimplementedPolarisConfigGRPCServer) GetConfigFileMetadataList(context.Context, *ConfigFileGroupRequest) (*ConfigClientListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetConfigFileMetadataList not implemented")
}
func (*UnimplementedPolarisConfigGRPCServer) Discover(PolarisConfigGRPC_DiscoverServer) error {
	return status.Errorf(codes.Unimplemented, "method Discover not implemented")
}

func RegisterPolarisConfigGRPCServer(s *grpc.Server, srv PolarisConfigGRPCServer) {
	s.RegisterService(&_PolarisConfigGRPC_serviceDesc, srv)
}

func _PolarisConfigGRPC_GetConfigFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClientConfigFileInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PolarisConfigGRPCServer).GetConfigFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.PolarisConfigGRPC/GetConfigFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PolarisConfigGRPCServer).GetConfigFile(ctx, req.(*ClientConfigFileInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _PolarisConfigGRPC_CreateConfigFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConfigFile)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PolarisConfigGRPCServer).CreateConfigFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.PolarisConfigGRPC/CreateConfigFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PolarisConfigGRPCServer).CreateConfigFile(ctx, req.(*ConfigFile))
	}
	return interceptor(ctx, in, info, handler)
}

func _PolarisConfigGRPC_UpdateConfigFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConfigFile)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PolarisConfigGRPCServer).UpdateConfigFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.PolarisConfigGRPC/UpdateConfigFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PolarisConfigGRPCServer).UpdateConfigFile(ctx, req.(*ConfigFile))
	}
	return interceptor(ctx, in, info, handler)
}

func _PolarisConfigGRPC_PublishConfigFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConfigFileRelease)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PolarisConfigGRPCServer).PublishConfigFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.PolarisConfigGRPC/PublishConfigFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PolarisConfigGRPCServer).PublishConfigFile(ctx, req.(*ConfigFileRelease))
	}
	return interceptor(ctx, in, info, handler)
}

func _PolarisConfigGRPC_UpsertAndPublishConfigFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConfigFilePublishInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PolarisConfigGRPCServer).UpsertAndPublishConfigFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.PolarisConfigGRPC/UpsertAndPublishConfigFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PolarisConfigGRPCServer).UpsertAndPublishConfigFile(ctx, req.(*ConfigFilePublishInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _PolarisConfigGRPC_WatchConfigFiles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClientWatchConfigFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PolarisConfigGRPCServer).WatchConfigFiles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.PolarisConfigGRPC/WatchConfigFiles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PolarisConfigGRPCServer).WatchConfigFiles(ctx, req.(*ClientWatchConfigFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PolarisConfigGRPC_GetConfigFileMetadataList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConfigFileGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PolarisConfigGRPCServer).GetConfigFileMetadataList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.PolarisConfigGRPC/GetConfigFileMetadataList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PolarisConfigGRPCServer).GetConfigFileMetadataList(ctx, req.(*ConfigFileGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PolarisConfigGRPC_Discover_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(PolarisConfigGRPCServer).Discover(&polarisConfigGRPCDiscoverServer{stream})
}

type PolarisConfigGRPC_DiscoverServer interface {
	Send(*ConfigDiscoverResponse) error
	Recv() (*ConfigDiscoverRequest, error)
	grpc.ServerStream
}

type polarisConfigGRPCDiscoverServer struct {
	grpc.ServerStream
}

func (x *polarisConfigGRPCDiscoverServer) Send(m *ConfigDiscoverResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *polarisConfigGRPCDiscoverServer) Recv() (*ConfigDiscoverRequest, error) {
	m := new(ConfigDiscoverRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _PolarisConfigGRPC_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1.PolarisConfigGRPC",
	HandlerType: (*PolarisConfigGRPCServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetConfigFile",
			Handler:    _PolarisConfigGRPC_GetConfigFile_Handler,
		},
		{
			MethodName: "CreateConfigFile",
			Handler:    _PolarisConfigGRPC_CreateConfigFile_Handler,
		},
		{
			MethodName: "UpdateConfigFile",
			Handler:    _PolarisConfigGRPC_UpdateConfigFile_Handler,
		},
		{
			MethodName: "PublishConfigFile",
			Handler:    _PolarisConfigGRPC_PublishConfigFile_Handler,
		},
		{
			MethodName: "UpsertAndPublishConfigFile",
			Handler:    _PolarisConfigGRPC_UpsertAndPublishConfigFile_Handler,
		},
		{
			MethodName: "WatchConfigFiles",
			Handler:    _PolarisConfigGRPC_WatchConfigFiles_Handler,
		},
		{
			MethodName: "GetConfigFileMetadataList",
			Handler:    _PolarisConfigGRPC_GetConfigFileMetadataList_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Discover",
			Handler:       _PolarisConfigGRPC_Discover_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "grpc_config_api.proto",
}
