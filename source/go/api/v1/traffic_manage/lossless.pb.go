// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.27.3
// source: lossless.proto

package traffic_manage

import (
	_ "github.com/polarismesh/specification/source/go/api/v1/model"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/durationpb"
	_ "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DelayRegister_DelayStrategy int32

const (
	// register instance after delay specific time
	DelayRegister_DELAY_BY_TIME DelayRegister_DelayStrategy = 0
	// register instance until health check successfully
	DelayRegister_DELAY_BY_HEALTH_CHECK DelayRegister_DelayStrategy = 1
)

// Enum value maps for DelayRegister_DelayStrategy.
var (
	DelayRegister_DelayStrategy_name = map[int32]string{
		0: "DELAY_BY_TIME",
		1: "DELAY_BY_HEALTH_CHECK",
	}
	DelayRegister_DelayStrategy_value = map[string]int32{
		"DELAY_BY_TIME":         0,
		"DELAY_BY_HEALTH_CHECK": 1,
	}
)

func (x DelayRegister_DelayStrategy) Enum() *DelayRegister_DelayStrategy {
	p := new(DelayRegister_DelayStrategy)
	*p = x
	return p
}

func (x DelayRegister_DelayStrategy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DelayRegister_DelayStrategy) Descriptor() protoreflect.EnumDescriptor {
	return file_lossless_proto_enumTypes[0].Descriptor()
}

func (DelayRegister_DelayStrategy) Type() protoreflect.EnumType {
	return &file_lossless_proto_enumTypes[0]
}

func (x DelayRegister_DelayStrategy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DelayRegister_DelayStrategy.Descriptor instead.
func (DelayRegister_DelayStrategy) EnumDescriptor() ([]byte, []int) {
	return file_lossless_proto_rawDescGZIP(), []int{2, 0}
}

// 优雅上下线规则的模型
type LosslessRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// rule id
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// service for rule belongs to
	Service string `protobuf:"bytes,2,opt,name=service,proto3" json:"service,omitempty"`
	// namespace for rule belongs to
	Namespace string `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// revision routing version
	Revision string `protobuf:"bytes,4,opt,name=revision,proto3" json:"revision,omitempty"`
	// ctime create time of the rules
	Ctime string `protobuf:"bytes,5,opt,name=ctime,proto3" json:"ctime,omitempty"`
	// mtime modify time of the rules
	Mtime string `protobuf:"bytes,6,opt,name=mtime,proto3" json:"mtime,omitempty"`
	// configuration for lossless online
	LosslessOnline *LosslessOnline `protobuf:"bytes,7,opt,name=losslessOnline,json=lossless_online,proto3" json:"losslessOnline,omitempty"`
	// configuration for lossless offline
	LosslessOffline *LosslessOffline `protobuf:"bytes,8,opt,name=losslessOffline,json=lossless_offline,proto3" json:"losslessOffline,omitempty"`
	// rule labels
	Metadata map[string]string `protobuf:"bytes,9,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *LosslessRule) Reset() {
	*x = LosslessRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lossless_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LosslessRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LosslessRule) ProtoMessage() {}

func (x *LosslessRule) ProtoReflect() protoreflect.Message {
	mi := &file_lossless_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LosslessRule.ProtoReflect.Descriptor instead.
func (*LosslessRule) Descriptor() ([]byte, []int) {
	return file_lossless_proto_rawDescGZIP(), []int{0}
}

func (x *LosslessRule) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LosslessRule) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *LosslessRule) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *LosslessRule) GetRevision() string {
	if x != nil {
		return x.Revision
	}
	return ""
}

func (x *LosslessRule) GetCtime() string {
	if x != nil {
		return x.Ctime
	}
	return ""
}

func (x *LosslessRule) GetMtime() string {
	if x != nil {
		return x.Mtime
	}
	return ""
}

func (x *LosslessRule) GetLosslessOnline() *LosslessOnline {
	if x != nil {
		return x.LosslessOnline
	}
	return nil
}

func (x *LosslessRule) GetLosslessOffline() *LosslessOffline {
	if x != nil {
		return x.LosslessOffline
	}
	return nil
}

func (x *LosslessRule) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type LosslessOnline struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// configuration for delayRegister
	DelayRegister *DelayRegister `protobuf:"bytes,1,opt,name=delayRegister,json=delay_register,proto3" json:"delayRegister,omitempty"`
	// configuration for warmup
	Warmup *Warmup `protobuf:"bytes,2,opt,name=warmup,proto3" json:"warmup,omitempty"`
	// configuration for readiness probe
	Readiness *Readiness `protobuf:"bytes,3,opt,name=readiness,proto3" json:"readiness,omitempty"`
}

func (x *LosslessOnline) Reset() {
	*x = LosslessOnline{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lossless_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LosslessOnline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LosslessOnline) ProtoMessage() {}

func (x *LosslessOnline) ProtoReflect() protoreflect.Message {
	mi := &file_lossless_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LosslessOnline.ProtoReflect.Descriptor instead.
func (*LosslessOnline) Descriptor() ([]byte, []int) {
	return file_lossless_proto_rawDescGZIP(), []int{1}
}

func (x *LosslessOnline) GetDelayRegister() *DelayRegister {
	if x != nil {
		return x.DelayRegister
	}
	return nil
}

func (x *LosslessOnline) GetWarmup() *Warmup {
	if x != nil {
		return x.Warmup
	}
	return nil
}

func (x *LosslessOnline) GetReadiness() *Readiness {
	if x != nil {
		return x.Readiness
	}
	return nil
}

type DelayRegister struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// enable delay registry
	Enable bool `protobuf:"varint,1,opt,name=enable,proto3" json:"enable,omitempty"`
	// delay register strategy
	Strategy DelayRegister_DelayStrategy `protobuf:"varint,2,opt,name=strategy,proto3,enum=v1.DelayRegister_DelayStrategy" json:"strategy,omitempty"`
	// delay register time by second, active when strategy == DELAY_BY_TIME
	IntervalSecond int32 `protobuf:"varint,3,opt,name=intervalSecond,json=interval_second,proto3" json:"intervalSecond,omitempty"`
	// protocol to do health check, default http, active when strategy == DELAY_BY_HEALTH_CHECK
	HealthCheckProtocol string `protobuf:"bytes,4,opt,name=healthCheckProtocol,json=health_check_protocol,proto3" json:"healthCheckProtocol,omitempty"`
	// method to do health check, default GET, active when strategy == DELAY_BY_HEALTH_CHECK
	HealthCheckMethod string `protobuf:"bytes,5,opt,name=healthCheckMethod,json=health_check_method,proto3" json:"healthCheckMethod,omitempty"`
	// path to do health check, no default value, active when strategy == DELAY_BY_HEALTH_CHECK
	HealthCheckPath string `protobuf:"bytes,6,opt,name=healthCheckPath,json=health_check_path,proto3" json:"healthCheckPath,omitempty"`
	// health check interval second, default is 30, active when strategy == DELAY_BY_HEALTH_CHECK
	HealthCheckIntervalSecond string `protobuf:"bytes,7,opt,name=healthCheckIntervalSecond,json=health_check_interval_second,proto3" json:"healthCheckIntervalSecond,omitempty"`
}

func (x *DelayRegister) Reset() {
	*x = DelayRegister{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lossless_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelayRegister) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelayRegister) ProtoMessage() {}

func (x *DelayRegister) ProtoReflect() protoreflect.Message {
	mi := &file_lossless_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelayRegister.ProtoReflect.Descriptor instead.
func (*DelayRegister) Descriptor() ([]byte, []int) {
	return file_lossless_proto_rawDescGZIP(), []int{2}
}

func (x *DelayRegister) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

func (x *DelayRegister) GetStrategy() DelayRegister_DelayStrategy {
	if x != nil {
		return x.Strategy
	}
	return DelayRegister_DELAY_BY_TIME
}

func (x *DelayRegister) GetIntervalSecond() int32 {
	if x != nil {
		return x.IntervalSecond
	}
	return 0
}

func (x *DelayRegister) GetHealthCheckProtocol() string {
	if x != nil {
		return x.HealthCheckProtocol
	}
	return ""
}

func (x *DelayRegister) GetHealthCheckMethod() string {
	if x != nil {
		return x.HealthCheckMethod
	}
	return ""
}

func (x *DelayRegister) GetHealthCheckPath() string {
	if x != nil {
		return x.HealthCheckPath
	}
	return ""
}

func (x *DelayRegister) GetHealthCheckIntervalSecond() string {
	if x != nil {
		return x.HealthCheckIntervalSecond
	}
	return ""
}

type Warmup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// enable warmup
	Enable bool `protobuf:"varint,1,opt,name=enable,proto3" json:"enable,omitempty"`
	// total warmup interval by second
	IntervalSecond int32 `protobuf:"varint,2,opt,name=intervalSecond,json=interval_second,proto3" json:"intervalSecond,omitempty"`
	// warmup stop when most of the instances in service are in warmup status
	EnableOverloadProtection bool `protobuf:"varint,3,opt,name=enableOverloadProtection,json=enable_overload_protection,proto3" json:"enableOverloadProtection,omitempty"`
	// the threshold to active overload protection, default is 50, threshld = sum(WarmupInstances)/sum(AllInstances)*100
	OverloadProtectionThreshold int32 `protobuf:"varint,4,opt,name=overloadProtectionThreshold,json=overload_protection_threshold,proto3" json:"overloadProtectionThreshold,omitempty"`
	// curvature for warmup register, default is 1
	Curvature int32 `protobuf:"varint,5,opt,name=curvature,proto3" json:"curvature,omitempty"`
}

func (x *Warmup) Reset() {
	*x = Warmup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lossless_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Warmup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Warmup) ProtoMessage() {}

func (x *Warmup) ProtoReflect() protoreflect.Message {
	mi := &file_lossless_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Warmup.ProtoReflect.Descriptor instead.
func (*Warmup) Descriptor() ([]byte, []int) {
	return file_lossless_proto_rawDescGZIP(), []int{3}
}

func (x *Warmup) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

func (x *Warmup) GetIntervalSecond() int32 {
	if x != nil {
		return x.IntervalSecond
	}
	return 0
}

func (x *Warmup) GetEnableOverloadProtection() bool {
	if x != nil {
		return x.EnableOverloadProtection
	}
	return false
}

func (x *Warmup) GetOverloadProtectionThreshold() int32 {
	if x != nil {
		return x.OverloadProtectionThreshold
	}
	return 0
}

func (x *Warmup) GetCurvature() int32 {
	if x != nil {
		return x.Curvature
	}
	return 0
}

type Readiness struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// enable /readiness expose
	Enable bool `protobuf:"varint,1,opt,name=enable,proto3" json:"enable,omitempty"`
}

func (x *Readiness) Reset() {
	*x = Readiness{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lossless_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Readiness) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Readiness) ProtoMessage() {}

func (x *Readiness) ProtoReflect() protoreflect.Message {
	mi := &file_lossless_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Readiness.ProtoReflect.Descriptor instead.
func (*Readiness) Descriptor() ([]byte, []int) {
	return file_lossless_proto_rawDescGZIP(), []int{4}
}

func (x *Readiness) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

type LosslessOffline struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// enable /offline expose
	Enable bool `protobuf:"varint,1,opt,name=enable,proto3" json:"enable,omitempty"`
}

func (x *LosslessOffline) Reset() {
	*x = LosslessOffline{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lossless_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LosslessOffline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LosslessOffline) ProtoMessage() {}

func (x *LosslessOffline) ProtoReflect() protoreflect.Message {
	mi := &file_lossless_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LosslessOffline.ProtoReflect.Descriptor instead.
func (*LosslessOffline) Descriptor() ([]byte, []int) {
	return file_lossless_proto_rawDescGZIP(), []int{5}
}

func (x *LosslessOffline) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

var File_lossless_proto protoreflect.FileDescriptor

var file_lossless_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x6c, 0x6f, 0x73, 0x73, 0x6c, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x02, 0x76, 0x31, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x94, 0x03, 0x0a, 0x0c, 0x4c, 0x6f, 0x73, 0x73, 0x6c, 0x65, 0x73, 0x73, 0x52, 0x75,
	0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65,
	0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65,
	0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x6d, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x74, 0x69,
	0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x0e, 0x6c, 0x6f, 0x73, 0x73, 0x6c, 0x65, 0x73, 0x73, 0x4f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x6f, 0x73, 0x73, 0x6c, 0x65, 0x73, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x0f,
	0x6c, 0x6f, 0x73, 0x73, 0x6c, 0x65, 0x73, 0x73, 0x5f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12,
	0x3e, 0x0a, 0x0f, 0x6c, 0x6f, 0x73, 0x73, 0x6c, 0x65, 0x73, 0x73, 0x4f, 0x66, 0x66, 0x6c, 0x69,
	0x6e, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f,
	0x73, 0x73, 0x6c, 0x65, 0x73, 0x73, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x10, 0x6c,
	0x6f, 0x73, 0x73, 0x6c, 0x65, 0x73, 0x73, 0x5f, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x12,
	0x3a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x09, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x73, 0x73, 0x6c, 0x65, 0x73, 0x73, 0x52,
	0x75, 0x6c, 0x65, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x3b, 0x0a, 0x0d, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x9b, 0x01, 0x0a, 0x0e, 0x4c, 0x6f, 0x73,
	0x73, 0x6c, 0x65, 0x73, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x38, 0x0a, 0x0d, 0x64,
	0x65, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x0e, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x06, 0x77, 0x61, 0x72, 0x6d, 0x75, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x72, 0x6d, 0x75,
	0x70, 0x52, 0x06, 0x77, 0x61, 0x72, 0x6d, 0x75, 0x70, 0x12, 0x2b, 0x0a, 0x09, 0x72, 0x65, 0x61,
	0x64, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x09, 0x72, 0x65, 0x61,
	0x64, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x22, 0x9d, 0x03, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x61, 0x79,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x12, 0x3b, 0x0a, 0x08, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x53, 0x74, 0x72, 0x61, 0x74,
	0x65, 0x67, 0x79, 0x52, 0x08, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x27, 0x0a,
	0x0e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x5f,
	0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x12, 0x32, 0x0a, 0x13, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x15, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x2e, 0x0a, 0x11, 0x68, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x2a, 0x0a, 0x0f, 0x68, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x61, 0x74, 0x68, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x12, 0x3f, 0x0a, 0x19, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x53, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1c, 0x68, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c,
	0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x22, 0x3d, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x61, 0x79,
	0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x11, 0x0a, 0x0d, 0x44, 0x45, 0x4c, 0x41,
	0x59, 0x5f, 0x42, 0x59, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x44,
	0x45, 0x4c, 0x41, 0x59, 0x5f, 0x42, 0x59, 0x5f, 0x48, 0x45, 0x41, 0x4c, 0x54, 0x48, 0x5f, 0x43,
	0x48, 0x45, 0x43, 0x4b, 0x10, 0x01, 0x22, 0xe9, 0x01, 0x0a, 0x06, 0x57, 0x61, 0x72, 0x6d, 0x75,
	0x70, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x27, 0x0a, 0x0e, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x12, 0x3c, 0x0a, 0x18, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x76, 0x65, 0x72,
	0x6c, 0x6f, 0x61, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x1a, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6f, 0x76, 0x65,
	0x72, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x42, 0x0a, 0x1b, 0x6f, 0x76, 0x65, 0x72, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x72, 0x6f, 0x74,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x1d, 0x6f, 0x76, 0x65, 0x72, 0x6c, 0x6f, 0x61, 0x64, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x73,
	0x68, 0x6f, 0x6c, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x75, 0x72, 0x76, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x75, 0x72, 0x76, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x22, 0x23, 0x0a, 0x09, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x29, 0x0a, 0x0f, 0x4c, 0x6f, 0x73, 0x73, 0x6c,
	0x65, 0x73, 0x73, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x42, 0x8e, 0x01, 0x0a, 0x37, 0x63, 0x6f, 0x6d, 0x2e, 0x74, 0x65, 0x6e, 0x63, 0x65,
	0x6e, 0x74, 0x2e, 0x70, 0x6f, 0x6c, 0x61, 0x72, 0x69, 0x73, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x42, 0x0d,
	0x4c, 0x6f, 0x73, 0x73, 0x6c, 0x65, 0x73, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5a, 0x44, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x6f, 0x6c, 0x61, 0x72, 0x69,
	0x73, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x67, 0x6f, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x5f, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_lossless_proto_rawDescOnce sync.Once
	file_lossless_proto_rawDescData = file_lossless_proto_rawDesc
)

func file_lossless_proto_rawDescGZIP() []byte {
	file_lossless_proto_rawDescOnce.Do(func() {
		file_lossless_proto_rawDescData = protoimpl.X.CompressGZIP(file_lossless_proto_rawDescData)
	})
	return file_lossless_proto_rawDescData
}

var file_lossless_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_lossless_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_lossless_proto_goTypes = []interface{}{
	(DelayRegister_DelayStrategy)(0), // 0: v1.DelayRegister.DelayStrategy
	(*LosslessRule)(nil),             // 1: v1.LosslessRule
	(*LosslessOnline)(nil),           // 2: v1.LosslessOnline
	(*DelayRegister)(nil),            // 3: v1.DelayRegister
	(*Warmup)(nil),                   // 4: v1.Warmup
	(*Readiness)(nil),                // 5: v1.Readiness
	(*LosslessOffline)(nil),          // 6: v1.LosslessOffline
	nil,                              // 7: v1.LosslessRule.MetadataEntry
}
var file_lossless_proto_depIdxs = []int32{
	2, // 0: v1.LosslessRule.losslessOnline:type_name -> v1.LosslessOnline
	6, // 1: v1.LosslessRule.losslessOffline:type_name -> v1.LosslessOffline
	7, // 2: v1.LosslessRule.metadata:type_name -> v1.LosslessRule.MetadataEntry
	3, // 3: v1.LosslessOnline.delayRegister:type_name -> v1.DelayRegister
	4, // 4: v1.LosslessOnline.warmup:type_name -> v1.Warmup
	5, // 5: v1.LosslessOnline.readiness:type_name -> v1.Readiness
	0, // 6: v1.DelayRegister.strategy:type_name -> v1.DelayRegister.DelayStrategy
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_lossless_proto_init() }
func file_lossless_proto_init() {
	if File_lossless_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_lossless_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LosslessRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lossless_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LosslessOnline); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lossless_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelayRegister); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lossless_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Warmup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lossless_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Readiness); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lossless_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LosslessOffline); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_lossless_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_lossless_proto_goTypes,
		DependencyIndexes: file_lossless_proto_depIdxs,
		EnumInfos:         file_lossless_proto_enumTypes,
		MessageInfos:      file_lossless_proto_msgTypes,
	}.Build()
	File_lossless_proto = out.File
	file_lossless_proto_rawDesc = nil
	file_lossless_proto_goTypes = nil
	file_lossless_proto_depIdxs = nil
}
